{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { getToken } from 'next-auth/jwt'\n\nexport async function middleware(req: NextRequest) {\n  const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET })\n  const isAuth = !!token\n  const isAuthPage = req.nextUrl.pathname.startsWith('/auth')\n  const isDashboard = req.nextUrl.pathname.startsWith('/dashboard')\n  const isStorePage = req.nextUrl.pathname.startsWith('/store')\n  const isAdminDashboard = req.nextUrl.pathname.startsWith('/admin')\n  const isHomePage = req.nextUrl.pathname === '/'\n  const isApiAuthRoute = req.nextUrl.pathname.startsWith('/api/auth')\n\n  // Allow API auth routes (including password reset)\n  if (isApiAuthRoute) {\n    return NextResponse.next()\n  }\n\n  // Allow home page to redirect naturally\n  if (isHomePage) {\n    return NextResponse.next()\n  }\n\n  // Allow password reset pages even if not authenticated\n  const passwordResetPages = [\n    '/auth/forgot-password',\n    '/auth/reset-password'\n  ]\n  if (passwordResetPages.some(page => req.nextUrl.pathname.startsWith(page))) {\n    return NextResponse.next()\n  }\n\n  // If user is on auth page and is authenticated, redirect to appropriate dashboard\n  if (isAuthPage && isAuth) {\n    if (token.role === 'ADMIN') {\n      return NextResponse.redirect(new URL('/admin', req.url))\n    } else if (token.role === 'STORE_OWNER' || token.role === 'STORE_EMPLOYEE') {\n      return NextResponse.redirect(new URL('/store', req.url))\n    } else {\n      // For users without specific roles, redirect to store dashboard\n      return NextResponse.redirect(new URL('/store', req.url))\n    }\n  }\n\n  // If user is not authenticated and trying to access protected routes\n  if (!isAuth && (isDashboard || isAdminDashboard || isStorePage)) {\n    return NextResponse.redirect(new URL('/auth/login', req.url))\n  }\n\n  // If user is authenticated but trying to access admin routes without admin role\n  if (isAuth && isAdminDashboard && token.role !== 'ADMIN') {\n    return NextResponse.redirect(new URL('/store', req.url))\n  }\n\n  // If user is authenticated but trying to access store routes without proper role\n  if (isAuth && isStorePage && !['STORE_OWNER', 'STORE_EMPLOYEE', 'ADMIN'].includes(token.role as string)) {\n    return NextResponse.redirect(new URL('/auth/login', req.url))\n  }\n\n  // If user is authenticated but trying to access legacy dashboard, redirect to store\n  if (isAuth && isDashboard) {\n    return NextResponse.redirect(new URL('/store', req.url))\n  }\n\n  return NextResponse.next()\n}\n\nexport const config = {\n  matcher: [\n    '/((?!api/auth|_next/static|_next/image|favicon.ico|public).*)',\n  ],\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEO,eAAe,WAAW,GAAgB;IAC/C,MAAM,QAAQ,MAAM,CAAA,GAAA,yWAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAK,QAAQ,QAAQ,GAAG,CAAC,eAAe;IAAC;IACxE,MAAM,SAAS,CAAC,CAAC;IACjB,MAAM,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IACnD,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IACpD,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IACpD,MAAM,mBAAmB,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IACzD,MAAM,aAAa,IAAI,OAAO,CAAC,QAAQ,KAAK;IAC5C,MAAM,iBAAiB,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAEvD,mDAAmD;IACnD,IAAI,gBAAgB;QAClB,OAAO,8VAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,wCAAwC;IACxC,IAAI,YAAY;QACd,OAAO,8VAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,uDAAuD;IACvD,MAAM,qBAAqB;QACzB;QACA;KACD;IACD,IAAI,mBAAmB,IAAI,CAAC,CAAA,OAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ;QAC1E,OAAO,8VAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,kFAAkF;IAClF,IAAI,cAAc,QAAQ;QACxB,IAAI,MAAM,IAAI,KAAK,SAAS;YAC1B,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD,OAAO,IAAI,MAAM,IAAI,KAAK,iBAAiB,MAAM,IAAI,KAAK,kBAAkB;YAC1E,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD,OAAO;YACL,gEAAgE;YAChE,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD;IACF;IAEA,qEAAqE;IACrE,IAAI,CAAC,UAAU,CAAC,eAAe,oBAAoB,WAAW,GAAG;QAC/D,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,IAAI,GAAG;IAC7D;IAEA,gFAAgF;IAChF,IAAI,UAAU,oBAAoB,MAAM,IAAI,KAAK,SAAS;QACxD,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,iFAAiF;IACjF,IAAI,UAAU,eAAe,CAAC;QAAC;QAAe;QAAkB;KAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAa;QACvG,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,IAAI,GAAG;IAC7D;IAEA,oFAAoF;IACpF,IAAI,UAAU,aAAa;QACzB,OAAO,8VAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,OAAO,8VAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}